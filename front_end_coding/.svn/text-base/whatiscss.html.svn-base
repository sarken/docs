<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
		<head>
	  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<title>What is CSS</title>
		<link rel="stylesheet" type="text/css" href="front-end.css"/>
		<style type="text/css"><!--
		#documentexample li, 	#documentexample span {border-color:#ccc;}
		#documentexample li:hover, 	#documentexample span:hover {border:1px solid;}
 a.otw {background: #900; color:#fff; border:2px solid #000; font: 100 small-caps 1.5em 'gill sans',sans-serif; text-decoration:none; padding:0.15em }-->
		</style>
	</head>
	<body>
		<div class="wrapper">
			<div class="article">
				<h1>What is <acronym title"cascading style sheets">CSS</acronym>?</h1>
				<h2>Contents</h2>
				<ul>
					<li><a href="#intro">Introduction</a></li>
					<li><a href="#terms">Terms</a></li>
					<li><a href="#selecting">Selecting</a></li>
					<li><a href="#values">Values</a></li>
					<li><a href="#blockinline">Block and Inline</a></li>
					<li><a href="#resources">Resources</a></li>
				</ul>
				<h3 id="intro">Intro</h3>
				<p><acronym title"cascading style sheets">CSS</acronym> is the way we tell a browser how to display our <acronym title="eXtensible hyperText markup language">XHTML</acronym> document. We write a list of rules describing the colour of the text, the size of the boxes&#8212; what goes where and what it looks like.
				</p>
				<p>To write a <acronym>CSS</acronym> document, conceptually, we take the structure of an <acronym>HTML</acronym> document and lay it out so that:
				</p>
				<ol class="diagram" id="documentexample">
					<li>&lt;body&gt;
						<ol>
							<li title="body #header">&lt;div id="header"&gt;
								<ol>
									<li title="body #header h1">&lt;h1&gt;My Page Title&lt;/h1&gt;</li>
									<li title="body #header ul.navigation">&lt;ul class="navigation"&gt;
										<ol>
											<li title="body #header ul.navigation li">&lt;li&gt; <span title="body #header ul.navigation li a">&lt;a href="http://..."&gt;friends&lt;/a&gt;</span> &lt;/li&gt;
											</li>
											<li title="body #header ul.navigation li">&lt;li&gt; <span title="body #header ul.navigation li a">&lt;a href="http://..."&gt;profile&lt;/a&gt;</span> &lt;/li&gt;
											</li>
											<li title="body #header ul.navigation li">&lt;li&gt; <span title="body #header ul.navigation li a">&lt;a href="http://..."&gt;journal&lt;/a&gt;</span> &lt;/li&gt;
											</li>
										</ol>
										&lt;/ul&gt;
									</li>
								</ol>
								&lt;/div&gt;
							</li>
							<li title="body #content">&lt;div id="content"&gt;
								<ol>
									<li title="body #content p">&lt;p&gt; My content goes here&lt;/p&gt;</li>
								</ol>
								&lt;/div&gt;
							</li>
							<li title="body #footer">&lt;div id="footer"&gt;
								<ol>
									<li title="body #footer p">&lt;p&gt; My page by me!&lt;/p&gt;</li>
								</ol>
								&lt;/div&gt;
							</li>
						</ol>
					</li>
				</ol>
				<p>Becomes...</p>
				<p><pre><code>
body
	{ property:value; }
#header 
	{ property:value; }
#header h1 
	{ property:value; }
ul.navigation 
	{ property:value; }
#content 
	{ property:value; }
#content p 
	{ property:value; }
#footer 
	{ property:value; }
				</code></pre></p>
				<p><acronym>HTML</acronym> pages are like tupperware on a shelf: boxes nested inside each other. Everything <strong>nested</strong> inside the body tag <strong>inherits</strong> the properties and values assigned to body, unless you say different. Everything inside #container inherits the properties of body and #container, and so on. <acronym title"cascading style sheets">CSS</acronym>, then, cascades down the page, sort of like champagne filling a pyramid of glasses.
				</p>
				<p>Before we go any further, let's explore some terms:</p>
				<h3 id="terms"><acronym title"cascading style sheets">CSS</acronym> terms</h3>
				<dl class="cssterms">
					<dt>selectors:</dt>
					<dd>anything you can select and then style is a selector; any html tag, class or id can be styled. Anything that can be given properties is a selector.
					</dd>
					<dt>properties:</dt>
					<dd>properties belong to selectors and they go in between curly brackets. Imagine each rule is part of a mini-biography of a selector:
						<p>Jane (sex: female; age: 30; status: single; background: archeology;)</p>
						<p>Becomes</p>
						<p>#content{ background: #fff; color: #000; border: 1px dotted #666;}</p>
					</dd>
					<dt>values:</dt>
					<dd>the value of the property. Values go after the colon. The value of age is 30; the value of background is #ffffff.
					</dd>
				</dl>
				<p>To be complete, every property must have a value defined and vice versa. This property+value pair goes {inside the curly brackets} and each pair is separated by a semi-colon, just like complete clauses in a sentence.
				</p>
				<p style="font:100 2em monospace;text-align:center;">#selector { property:value; }</p>
				<h4>Different kinds of selectors</h4>
				<dl class="cssterms">
					<dt>id:</dt>
					<dd>The hash sign # identifies unique elements. A unique element (something used only once on the page) is given an identity, just like you have a unique identity as a single person.
					</dd>
					<dt>class:</dt>
					<dd>For something used more than once, we may assign a class, or many classes, just like a person can be Welsh, British, a woman, and short. A class says this is a type, not a unique thing. In <acronym>CSS</acronym>, we use a dot to append a class. An unordered list of the class navigation is written like this:
						<dl><dd><code>ul.navigation { property:value; }</code></dd></dl>
					</dd>
					<dt>tag</dt>
					<dd>For plain html tags, we don't use anything special, we just write the tag:
						<dl><dd><code>table { property:value; }</code></dd></dl>
					</dd>
				</dl>
				<h3 id="selecting">Selecting</h3>
				<p>Looking again at the <a href="#documentexample">example <acronym>HTML</acronym> document</a>, see that the selector in a <acronym>CSS</acronym> declaration is actually a <em>path</em>. You can select every paragraph everywhere:</p>
				<p><code><span style="color:red;">p</span> { color:red; }</code></p>
				<p>Or you can specify only certain paragraphs, in certain places, by writing out the path:</p>
				<p style="color:black;"><code>p { color: black; }</code><br />
					<code>body #content <span style="color:red;">p</span> { color:red; }</code></p>
				<p>You can read more about <a href="debugging-the-cascade.html">specificity</a> later. For now, know that <acronym>CSS</acronym> is basically making pretty boxes and arranging them on a page. It uses a very clear jargon that's almost English, so it's easy to understand and to intuit further.
				</p>
				<h3 id="values">Some Values</h3>
				<p>On our archive, we use hex codes to define colours. Hex codes are a set of six letters (a-f) and digits (0-9) that make up a colour. #000000 is black. #ffffff is white. Everything else is somewhere in between.
				</p>
				<p style="text-align:center;">
					<img src="http://i122.photobucket.com/albums/o253/stylim/tutcaps/fff.jpg" style="background:3px solid #ccc;" />
					<img src="http://i122.photobucket.com/albums/o253/stylim/tutcaps/000.jpg"  style="background:3px solid #ccc;" />
					<img src="http://i122.photobucket.com/albums/o253/stylim/tutcaps/inbetween.jpg" style="background:3px solid #ccc;" />
				</p>
				<p>We use ems as the general unit of measurement. 1 em is 100% of your font size; if your font size is 16px, 1 em is 16px.
				</p>
				<p>1 em square: <span style="display:inline-block; width:1em; height:1em; background:1px solid; background:#000; margin:auto; padding:0;"><!-- --></span>
				</p>
				<p>Em is a scalable measurement, so if your visitor needs to zoom in or scale up the text, your layout is less likely to go madly wrong. Em the measurement is different from the <acronym>HTML</acronym> tag &lt;em&gt;, which means <em>emphasis</em>. <a href="em-scale.html">Learn about our "Em Scale"</a>.
				</p>
				<h3 id="blockinline">Block and Inline</h3>
				<p>HTML elements come in two flavours: block-level and inline.</p>
				<ol class="diagram" title="block level html elements stacking up">
					<li>&lt;ul&gt;
						<ol>
							<li>&lt;li&gt; block level elements &lt;/li&gt;</li>
							<li>&lt;li&gt; are like building blocks &lt;/li&gt;</li>
							<li>&lt;li&gt; they stack up one underneath the other &lt;/li&gt;</li>
						</ol>
					</li>
				</ol>
				<p class="diagram">Elements like <span>&lt;a href="http://..."&gt;<a href="">links</a>&lt;/a&gt;</span> and <span>&lt;em&gt;<em>emphasis</em>&lt;/em&gt;</span> run along in a line, like text does.
				</p>
				<p>Elements are either block or inline by default,* but in <acronym>CSS</acronym> we can decide how we want to display <em>every single element</em> on the screen. So we can make the list items &lt;li&gt; of an unordered list &lt;ul&gt;, which is a block containing a stack of blocks, into a line of elements very easily, by making the declaration: <code>ul li {display:inline;}</code>
				</p>
				<ol class="diagram" title="block level html elements displayed inline">
					<li>&lt;ul&gt;
						<ol>
							<li style="display:inline;">&lt;li&gt; css &lt;/li&gt;</li>
							<li style="display:inline;">&lt;li&gt; controls &lt;/li&gt;</li>
							<li style="display:inline;">&lt;li&gt; presentation &lt;/li&gt;</li>
						</ol>
					</li>
				</ol>
				<p>Think of each #selector as a box. We can make it stack up, give it a background colour (or an image or both), a border, and we can give that border a colour and a thickness and a style. We can decide how big each box is and much blank space is going to be around it (margin) and inside it (padding). We can position (float, top, left) each box on the page. We can make the text in the box a particular size, colour, font, and make it bold or italic or asscaps; we can align it to the left or the right or centre it. We can do anything! (Almost anything.)
				</p>
				<p>So <acronym>CSS</acronym> is a short profile of how your page is presented:</p>
				<p><code>a.otw { background: #900; color:#fff; border:2px solid #000; font: 100 small-caps 1.5em 'gill sans',sans-serif; text-decoration:none; padding:0.15em }</code></p>
				<p style="text-align:center;"><a href="http://transformativeworks.org/" title="Organisation for Transformative Works">OTW</a>  to <a class="otw" href="http://transformativeworks.org/" title="the same link with css styling applied">OTW</a></p>
				<h4 id="resources">Some useful <acronym>CSS</acronym> resources</h4>
				<ul>
					<li><a href="http://flumpcakes.co.uk/css/optimiser/">flumpcakes/optimiser</a></li>
					<li><a href="http://jigsaw.w3.org/css-validator/">w3c/validator</a></li>
					<li><a href="http://www.csszengarden.com/">css zen garden</a></li>
					<li><a href="http://www.w3.org/TR/CSS21/sample.html">CSS 'default' styles</a></li>
					<li><a href="http://www.w3.org/Style/CSS/">learn css with the w3</a></li>
					<li><a href="http://www.w3schools.com/tags/default.asp">learn html with the w3c</a></li>
				</ul>
			</div>
			<p><a href="index.html">&larr; Back</a></p>
		</div>
	</body>
</html>